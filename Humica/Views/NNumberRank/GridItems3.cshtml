@{
    var gridExtension = Html.DevExpress().GridView(
      settings =>
      {

          settings.Name = "gridViewItem3";
          settings.KeyFieldName = "ID";

          settings.Width = Unit.Percentage(100);
          settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
          settings.CallbackRouteValues = new { Controller = "NNumberRank", Action = "GridItems3" };

          settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "NNumberRank", Action = "CreatePartial3" };
          settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "NNumberRank", Action = "EditPartial3" };
          settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "NNumberRank", Action = "DeletePartial3" };

          settings.SettingsSearchPanel.Visible = true;
          settings.CommandColumn.Visible = true;
          settings.CommandColumn.ShowDeleteButton = true;
          settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
          settings.CommandColumn.ShowNewButtonInHeader = true;
          settings.CommandColumn.ShowCancelButton = true;
          settings.CommandColumn.ShowEditButton = true;
          settings.SettingsBehavior.AllowFocusedRow = true;
          settings.SettingsBehavior.ConfirmDelete = true;
          settings.Columns.Add(column =>
          {

              column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "ID");
              column.FieldName = "ID";
              column.Width = 200;
              column.Visible = false;
          });


          settings.Columns.Add(column =>
          {

              column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "Company");
              column.FieldName = "Company";
              column.Width = 200;
              column.ColumnType = MVCxGridViewColumnType.ComboBox;
              var textProperties = column.PropertiesEdit as ComboBoxProperties;
              textProperties.ValidationSettings.Display = Display.None;
              textProperties.DataSource = ViewData["COMPANY_SELECT"];
              textProperties.TextFormatString = "{1}";
              textProperties.ValueField = "Company";
              textProperties.Columns.Add("Company", Humica.EF.Models.SY.SYSettings.getLabel("Company"));
              textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
              textProperties.ValueType = typeof(string);

          });

          settings.Columns.Add(column =>
          {

              column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "Branch");
              column.FieldName = "Branch";
              column.Width = 200;
              column.ColumnType = MVCxGridViewColumnType.ComboBox;
              var textProperties = column.PropertiesEdit as ComboBoxProperties;
              textProperties.ValidationSettings.Display = Display.None;
              textProperties.DataSource = ViewData["BRANCHES_SELECT"];
              textProperties.TextFormatString = "{1}";
              textProperties.ValueField = "Code";
              textProperties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
              textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
              textProperties.ValueType = typeof(string);

          });

          settings.Columns.Add(column =>
          {

              column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "Business Unit");
              column.FieldName = "BU";
              column.Width = 200;
              column.ColumnType = MVCxGridViewColumnType.ComboBox;
              var textProperties = column.PropertiesEdit as ComboBoxProperties;
              textProperties.ValidationSettings.Display = Display.None;
              textProperties.DataSource = ViewData["GROUPDEPARTMENT_SELECT"];
              textProperties.TextFormatString = "{1}";
              textProperties.ValueField = "Code";
              textProperties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
              textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
              //textProperties.ValueType = typeof(string);

          });

          settings.Columns.Add(column =>
          {
              column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("NumberRank");
              column.FieldName = "NumberRank";

              column.ColumnType = MVCxGridViewColumnType.ComboBox;
              var textProperties = column.PropertiesEdit as ComboBoxProperties;
              textProperties.DataSource = ViewData["NUMBER_LIST"];

              textProperties.ValueField = "NumberObject";
              textProperties.TextField = "Description";
              textProperties.ValueType = typeof(string);
              textProperties.Width = Unit.Percentage(100);
              column.Width = 200;

          });
          settings.SettingsEditing.EditFormColumnCount = 2;

          settings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
          settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
          settings.Settings.ShowHeaderFilterButton = true;

          settings.SettingsPager.PageSize = 25;
          settings.SettingsPager.EnableAdaptivity = true;
          settings.SettingsPager.PageSizeItemSettings.Visible = true;

          settings.SettingsExport.EnableClientSideExportAPI = true;
          settings.SettingsExport.ExportSelectedRowsOnly = true;

          settings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 800;
          settings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
          settings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;


          settings.SettingsBehavior.AllowFocusedRow = true;




          settings.CustomJSProperties = (s, e) =>
          {
              ASPxGridView grid_ = (ASPxGridView)s;
              Session[Humica.EF.SYSConstant.GRID_VIEW_LAYOUT_DETAIL + ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString()] = grid_.AllColumns;
              Session[Humica.EF.SYSConstant.GRID_VIEW_SOURCE_DETAIL + ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString()] = grid_.DataSource;

              e.Properties["cpVisibleRowCount"] = (s as MVCxGridView).VisibleRowCount;

          };

          settings.CellEditorInitialize = (s, e) =>
          {
              ASPxEdit editor = (ASPxEdit)e.Editor;
              editor.ValidationSettings.Display = Display.Dynamic;
              if (e.KeyValue != null)
              {
                  if (e.Column.FieldName == "NbrObject" || e.Column.FieldName == "ObjectSequent")
                  {
                      e.Editor.ReadOnly = true;
                  }
              }
          };

      });


    if (ViewData["EditError"] != null)
    {
        gridExtension.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@gridExtension.Bind(Model).GetHtml()

