@model Humica.Logic.Att.ATEmpSchObject

@Html.DevExpress().FormLayout(settings =>
{


    settings.Name = "FTFilterEmployee";
    settings.AlignItemCaptionsInAllGroups = true;

    int width = 150;

    settings.Items.AddGroupItem(m => Model, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");
        }).SetNestedContent(() =>
        {
            Humica.Logic.Att.ATEmpSchObject clsFilterStaff = new Humica.Logic.Att.ATEmpSchObject();
            Html.DevExpress().ComboBoxFor(i => i.Filter.EmpCode, s =>
            {
                s.Properties.ClientInstanceName = "cboEmployee";
                s.CallbackRouteValues = new { Controller = "LoadingListFilter", Action = "Employee" };
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = Humica.Models.SY.ClsConstant.TEXT_COMBOBOX_STRING_SINGLE;
                s.Properties.ValueField = "EmpCode";
                s.Properties.ValueType = typeof(string);
                s.Properties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("EmpCode"), 120);
                s.Properties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("EmployeeName"), 220);
                s.Properties.Columns.Add("OthAllName", Humica.EF.Models.SY.SYSettings.getLabel("EmployeeName 2"), 250);
                s.Properties.DropDownStyle = DropDownStyle.DropDownList;
                s.Properties.IncrementalFilteringDelay = 5;
                s.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                s.Properties.AllowNull = true;
                s.Properties.ClientSideEvents.SelectedIndexChanged = "ShowDataEmp";
            }).BindList(clsFilterStaff.OnLoadStaff()).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("AllName");

        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => Model.Filter.AllName, s =>
            {
                s.Properties.ClientInstanceName = "txtAllName";
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpType");
        })
             .SetNestedContent(() =>
             {
                 Html.DevExpress().TextBoxFor(i => Model.Filter.EmpType, s =>
                 {
                     s.Properties.ClientInstanceName = "txtEmpType";
                     s.ReadOnly = true;
                     s.ShowModelErrors = true;
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     s.Properties.ValidationSettings.SetFocusOnError = true;
                     s.Properties.ValidationSettings.ErrorText = "*";
                 }).Render();
             });
        g.Items
           .Add(m =>
           {
               m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
           })
           .SetNestedContent(() =>
           {
               Html.DevExpress().TextBoxFor(i => Model.Filter.Division, s =>
               {
                   s.Properties.ClientInstanceName = "txtDivision";
                   s.ReadOnly = true;
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
               }).Render();
           });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => Model.Filter.Department, s =>
            {
                s.Properties.ClientInstanceName = "txtDepartment";
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => Model.Filter.Section, s =>
            {
                s.Properties.ClientInstanceName = "txtSection";
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("LevelCode");
        })
           .SetNestedContent(() =>
           {
               Html.DevExpress().TextBoxFor(i => Model.Filter.Level, s =>
               {
                   s.Properties.ClientInstanceName = "txtLevel";
                   s.ReadOnly = true;
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
               }).Render();
           });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
        })
          .SetNestedContent(() =>
          {
              Html.DevExpress().TextBoxFor(i => Model.Filter.Position, s =>
              {
                  s.Properties.ClientInstanceName = "txtPosition";
                  s.ReadOnly = true;
                  s.ShowModelErrors = true;
                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  s.Properties.ValidationSettings.SetFocusOnError = true;
                  s.Properties.ValidationSettings.ErrorText = "*";
              }).Render();
          });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("StartDate");
        })
         .SetNestedContent(() =>
         {
             Html.DevExpress().DateEditFor(i => Model.Filter.StartDate, s =>
             {
                 s.Properties.ClientInstanceName = "txtStartDate";
                 s.ReadOnly = true;
                 //  s.ShowModelErrors = true;
                 s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 // s.Properties.ValidationSettings.SetFocusOnError = true;
                 s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                 s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                 s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                 s.Properties.ValidationSettings.ErrorText = "*";
             }).Render();
         });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("INYear");
        })
          .SetNestedContent(() =>
          {
              Html.DevExpress().SpinEditFor(i => Model.Filter.INYear, s =>
              {
                  s.ShowModelErrors = true;
                  s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                  s.Properties.ValidationSettings.SetFocusOnError = true;
                  s.Properties.ValidationSettings.ErrorText = "*";
                  s.Properties.DisplayFormatString = "#";
                  s.Properties.NumberType = SpinEditNumberType.Integer;
                  s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                  s.Properties.MinValue = -1;
                  s.Properties.MaxValue = 9999999999999;
              }).Render();
          });

        g.Items.Add(m =>
        {
            m.Caption = "";

        })
  .SetNestedContent(() =>
  {

      Html.DevExpress().Button(
          s =>
          {
              s.Name = "_btnRunReport";
              s.ToolTip = Humica.EF.Models.SY.SYSettings.getLabel("Go");
              s.RenderMode = ButtonRenderMode.Button;
              s.Text = Humica.EF.Models.SY.SYSettings.getLabel("Go");
              s.UseSubmitBehavior = true;
              s.Images.Image.IconID = IconID.ActionsApply16x16;
          }).GetHtml();
  });
    });

}).Bind(Model).GetHtml()