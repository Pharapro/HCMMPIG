@model Humica.Logic.RCM.IClsRCMRequest

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "RequestFormInfor";
    settings.AlignItemCaptionsInAllGroups = true;
    settings.Width = Unit.Percentage(90);

    settings.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Branch, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ClientInstanceName = "txtMissionType";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.TextFormatString = "{0}:{1}";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                    ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "_SELECT");
                s.Properties.ClientSideEvents.ValueChanged = "selectParam";
            }).BindList(ViewData["BRANCHES_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.DEPT, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.TextFormatString = "{0}:{1}";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Status");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Status, s =>
            {
                s.ReadOnly = true;
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "txtStatus";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Sect, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.TextFormatString = "{0}:{1}";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["SECTION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.POST, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ClientSideEvents.SelectedIndexChanged = "SelectPosition";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.TextFormatString = "{0}:{1}";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                s.Properties.ClientSideEvents.Init = "initPost";
            }).BindList(ViewData["POSITION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Level");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.JobLevel, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.TextFormatString = "{0}:{1}";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["LEVEL_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Recruit Type");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.RecruitType, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.AllowNull = false;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["RECRUITTYPE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Recruit For");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.RecruitFor, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.AllowNull = false;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["RECRUITFOR_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Number of Recruitment") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.NoOfRecruit, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.AllowNull = false;
                s.Properties.ClientInstanceName = "spNoOfRecruit";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                s.Properties.DisplayFormatString = "N0";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                s.Properties.NumberType = SpinEditNumberType.Float;
                s.Properties.MinValue = 0;
                s.Properties.MaxValue = 9999999999999;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Gender");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Gender, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.AllowNull = false;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["GENDER_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Working Type");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.WorkingType, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.AllowNull = false;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["WORKINGTYPE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Staff Type");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.StaffType, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.AllowNull = false;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["STAFFTYPE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Contract Type");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.TermEmp, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.AllowNull = false;
                s.Properties.ClientInstanceName = "txtTermEmp";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["CONTRACT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ProposedSalaryFrom");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.ProposedSalaryFrom, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.AllowNull = false;
                s.Properties.ClientInstanceName = "spFromSalary";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N2";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                s.Properties.MinValue = 1;
                s.Properties.MaxValue = 9999999999999;
                s.Properties.ClientSideEvents.ValueChanged = "validateSalaries";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("To");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.ProposedSalaryTo, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "spToSalary";
                s.Properties.AllowNull = false;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N2";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                s.Properties.MinValue = 1;
                s.Properties.MaxValue = 9999999999999;
                s.Properties.ClientSideEvents.ValueChanged = "validateSalaries";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Expected Date");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Header.ExpectedDate, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "dtExpected";
                s.ShowModelErrors = true;
                s.Properties.AllowNull = false;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Requested By") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.RequestedBy, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.AllowNull = false;
                s.Properties.ValidationSettings.Display = Display.None;
                s.Properties.TextFormatString = "{0}:{1}";
                s.Properties.ClientInstanceName = "cbRequestBy";
                s.Properties.ValueField = "EmpCode";
                s.Properties.DropDownStyle = DropDownStyle.DropDownList;
                s.Properties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("Employee Code"));
                s.Properties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("Employee Name"), 200);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["EMPCODE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Requested Date");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => i.Header.RequestedDate, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "dtRequested";
                s.ShowModelErrors = true;
                s.Properties.AllowNull = false;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Basic Salary");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.BasicSalary, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "txtBasicSalary";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.AllowNull = false;
                s.Properties.DisplayFormatString = "N2";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                s.Properties.NumberType = SpinEditNumberType.Float;
                s.Properties.MinValue = 0;
                s.Properties.MaxValue = 9999999999999;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Benefit Amount");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.BenefitAmount, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "txtBenefitAmount";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.AllowNull = false;
                s.Properties.DisplayFormatString = "N2";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                s.Properties.NumberType = SpinEditNumberType.Float;
                s.Properties.MinValue = 0;
                s.Properties.MaxValue = 9999999999999;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Attach File");
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().UploadControl(ss =>
            {
                ss.ShowProgressPanel = true;
                ss.CallbackRouteValues = new { Controller = "RCMRecruitRequest", Action = "UploadControlCallbackActionImage" };
                ss.Name = "UploadControl";
                ss.UploadMode = UploadControlUploadMode.Auto;
                ss.AutoStartUpload = true;
                ss.Width = 120;
                ss.DialogTriggerID = "externalDropZone";
                ss.AdvancedModeSettings.EnableDragAndDrop = false;
                ss.AdvancedModeSettings.EnableMultiSelect = false;
                ss.ShowTextBox = false;
                ss.ShowUploadButton = false;
                ss.ShowAddRemoveButtons = true;
                ss.ShowProgressPanel = true;
                ss.ShowClearFileSelectionButton = true;
                ss.AdvancedModeSettings.EnableFileList = true;
                ss.AdvancedModeSettings.FileListPosition = UploadControlFileListPosition.Top;
                ss.AdvancedModeSettings.ExternalDropZoneID = "externalDropZone";
                ss.AdvancedModeSettings.DropZoneText = "";
                ss.ValidationSettings.MaxFileSize = 4194304;
                ss.BrowseButton.Image.IconID = IconID.ActionsNew16x16;
                ss.UploadButton.Text = String.Empty;
                ss.ValidationSettings.AllowedFileExtensions = new string[] { ".jpg", ".png", ".pdf" };
                ss.ValidationSettings.ErrorStyle.CssClass = "validationMessage";
                ss.BrowseButton.Text = Humica.EF.Models.SY.SYSettings.getLabel("");
                ss.ClientSideEvents.FileUploadComplete = "completedUploadFileItem";
            }).Render();

            Html.DevExpress().HyperLink(
              s =>
              {
                  s.Name = "file_uploaded";
                  s.ToolTip = "File";
                  s.ClientVisible = false;
                  s.Properties.Target = "_BLANK";
                  s.Properties.Text = Humica.EF.Models.SY.SYSettings.getLabel("View");

              }).GetHtml();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Remark");
            m.ColumnSpan = 2;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Remark, s =>
            {
                s.Properties.ClientInstanceName = "txtRemark";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Width = Unit.Percentage(100);
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Reason") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
            m.ColumnSpan = 2;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Reason, s =>
            {
                s.Properties.ClientInstanceName = "txtReason";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Width = Unit.Percentage(100);
            }).Render();
        });
    });

}).GetHtml()
