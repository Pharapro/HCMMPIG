@{
        var grid = Html.DevExpress().GridView(
        settings =>
        {
            settings.Name = "GridHRResgierVehicleDetails";
            settings.KeyFieldName = "EmpCode";
            settings.Width = Unit.Percentage(100);
            settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
            settings.CallbackRouteValues = new { Controller = "MISPlan", Action = "GridHRResgierVehicleDetails" };
            settings.CommandColumn.Visible = false;
            settings.CommandColumn.ShowDeleteButton = false;
            settings.CommandColumn.ShowNewButtonInHeader = false;
            settings.CommandColumn.ShowCancelButton = false;
            settings.CommandColumn.ShowEditButton = false;
            settings.SettingsBehavior.AllowFocusedRow = false;
            settings.Columns.Add(column =>
            {

                column.Width = 150;
                column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("AssetCode");
                column.FieldName = "AssetCode";

            });
            settings.Columns.Add(column =>
            {
                column.Width = 250;
                column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("AssetClass");
                column.FieldName = "AssetClass";

            });
      
            settings.Columns.Add(column =>
            {
                column.Width = 80;
                column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Model");
                column.FieldName = "Model";
            });
            settings.Columns.Add(column =>
            {
                column.Width = 150;
                column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("VehicleType");
                column.FieldName = "VehicleType";
            });
            settings.Columns.Add(column =>
            {
                column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Year");
                column.Width = 80;
                column.FieldName = "Year";
                column.ColumnType = MVCxGridViewColumnType.SpinEdit;
                var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
                spinEditProperties.NumberType = SpinEditNumberType.Integer;
                spinEditProperties.Width = Unit.Percentage(100);
                spinEditProperties.DisplayFormatInEditMode = true;
                spinEditProperties.MinValue = 0;
                spinEditProperties.MaxValue = 1000000;
                spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
            });
            settings.Columns.Add(column =>
            {
                column.Width = 150;
                column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("PlateNumber");
                column.FieldName = "PlateNumber";
            });
            settings.Columns.Add(column =>
            {
                column.Width = 100;
                column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("(Color)");
                column.FieldName = "Color";


            });
            settings.Columns.Add(column =>
            {
                column.Width = 150;
                column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description");
                column.FieldName = "Description";

            });
            settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
            settings.Settings.VerticalScrollableHeight = Humica.EF.MD.SYSession.DealerPageHeigh - 150;
            settings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
            settings.SettingsBehavior.ConfirmDelete = true;

            settings.SettingsBehavior.AllowFocusedRow = true;
            settings.SettingsBehavior.AllowEllipsisInText = true;
            settings.Settings.ShowHeaderFilterButton = true;

            settings.SettingsPager.Position = PagerPosition.Bottom;
            settings.SettingsPager.FirstPageButton.Visible = true;
            settings.SettingsPager.LastPageButton.Visible = true;
            settings.SettingsPager.PageSize = 5;
            settings.SettingsPager.EnableAdaptivity = true;
            settings.SettingsPager.PageSizeItemSettings.Visible = true;

            settings.SettingsExport.EnableClientSideExportAPI = true;
            settings.SettingsExport.ExportSelectedRowsOnly = true;
            settings.CustomJSProperties = (sender, e) =>
            {
                e.Properties["cpVisibleRowCount"] = (sender as MVCxGridView).VisibleRowCount;
            };
            settings.CellEditorInitialize = (sender, e) =>
            {
                ASPxEdit editor = (ASPxEdit)e.Editor;
                editor.ValidationSettings.Display = Display.Dynamic;
                e.Editor.ReadOnly = false;
                if (e.KeyValue != null)
                {
                    if (e.Column.FieldName != "EmpCode")
                    {
                        e.Editor.ReadOnly = true;
                    }
                }
            };
        });

        if (ViewData["EditError"] != null)
        {
            grid.SetEditErrorText((string)ViewData["EditError"]);
        }
    }

    @grid.Bind(Model).GetHtml()


