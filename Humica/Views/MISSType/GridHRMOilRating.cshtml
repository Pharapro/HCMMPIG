@{
    var grid = Html.DevExpress().GridView(
       settings =>
       {

           settings.Name = "gridViewItem2";
           settings.KeyFieldName = "ID";

           settings.Width = Unit.Percentage(100);
           settings.SettingsEditing.Mode = GridViewEditingMode.Inline;

           settings.CallbackRouteValues = new { Controller = "MISSType", Action = "GridHRMOilRating" };

           settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "MISSType", Action = "CreateHRMOilRating" };
           settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "MISSType", Action = "EditHRMOilRating" };
           settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "MISSType", Action = "DeleteHRMOilRating" };

           settings.CommandColumn.Visible = true;
           settings.CommandColumn.ShowDeleteButton = true;
           settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
           settings.CommandColumn.ShowNewButtonInHeader = true;
           settings.CommandColumn.ShowCancelButton = true;
           settings.CommandColumn.ShowEditButton = true;
           settings.SettingsBehavior.AllowFocusedRow = true;
           settings.SettingsBehavior.ConfirmDelete = true;

           //settings.Columns.Add(column =>
           //{
           //    column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("CarType");
           //    column.FieldName = "CarType";
           //    column.ColumnType = MVCxGridViewColumnType.ComboBox;
           //    var textProperties = column.PropertiesEdit as ComboBoxProperties;
           //    textProperties.DataSource = ViewData["CAR_TYPE"];
           //    textProperties.ValueType = typeof(string);
           //    textProperties.Width = Unit.Percentage(100);

           //    textProperties.TextFormatString = "{0}";
           //    textProperties.ValueField = "SelectValue";
           //    textProperties.TextField = "SelectText";
           //    textProperties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
           //});
           
           settings.Columns.Add(column =>
           {
               column.Width = 100;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("CarType");
               column.FieldName = "CarType";

           });
           settings.Columns.Add(column =>
           {
               column.Width = 100;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Model");
               column.FieldName = "Model";

           });
           settings.Columns.Add(column =>
           {
               column.Width = 100;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Horsepower");
               column.FieldName = "Horsepower";


           });
           settings.Columns.Add(column =>
           {
               column.Width = 100;
               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Rate(L/Km)");
               column.FieldName = "Rate";


           });
           settings.Columns.Add(column =>
           {

               column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("IsCompany");
               column.FieldName = "IsCompany";
               column.ColumnType = MVCxGridViewColumnType.CheckBox;

           });

           settings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
           settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
           settings.Settings.ShowHeaderFilterButton = true;

           settings.SettingsPager.PageSize = 15;
           settings.SettingsPager.EnableAdaptivity = true;
           settings.SettingsPager.PageSizeItemSettings.Visible = true;

           settings.SettingsExport.EnableClientSideExportAPI = true;
           settings.SettingsExport.ExportSelectedRowsOnly = true;
           settings.SettingsBehavior.AllowFocusedRow = true;

           settings.CustomJSProperties = (sender, e) =>
           {
               e.Properties["cpVisibleRowCount"] = (sender as MVCxGridView).VisibleRowCount;
           };

           settings.CellEditorInitialize = (s, e) =>
           {
               ASPxEdit editor = (ASPxEdit)e.Editor;
               editor.ValidationSettings.Display = Display.Dynamic;
               if (e.KeyValue != null)
               {
                   if (e.Column.FieldName == "ID")
                   {
                       e.Editor.ReadOnly = true;
                   }
               }
               //if(e.KeyValue==null)
               //{
               //    if(e.Column.FieldName=="IsCompany")
               //    {
               //        e.Editor.Value = true;
               //    }
               //}
           };
       });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model).GetHtml()


