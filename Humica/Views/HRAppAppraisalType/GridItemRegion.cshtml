@{
    var grid = Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "gridViewItem2";
        settings.KeyFieldName = "Code";
        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.CallbackRouteValues = new { Controller = "HRAppAppraisalType", Action = "GridItemRegion" };
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "HRAppAppraisalType", Action = "CreateRegion" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "HRAppAppraisalType", Action = "EditRegion" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "HRAppAppraisalType", Action = "DeleteRegion" };
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.CommandColumn.ShowDeleteButton = true;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFooter = true;
        settings.SettingsContextMenu.Enabled = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;
        settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;

        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowCancelButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.CommandColumn.ShowUpdateButton = true;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.Columns.Add(column =>
        {
            column.Width = 150;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Code");
            column.FieldName = "Code";
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description");
            column.Width = 300;
            column.FieldName = "Description";
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("IsKPI");
            column.FieldName = "IsKPI";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Rating(%)");
            column.FieldName = "Rating";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.NumberType = SpinEditNumberType.Integer;
            spinEditProperties.DisplayFormatString = "N";
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.MinValue = 0;
            spinEditProperties.MaxValue = 999;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("InOrder");
            column.FieldName = "InOrder";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.NumberType = SpinEditNumberType.Integer;
            spinEditProperties.DisplayFormatString = "N";
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.MinValue = 0;
            spinEditProperties.MaxValue = 999;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        });

        settings.Columns.Add(column =>
        {
            column.Width = 150;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Remark");
            column.FieldName = "Remark";
        });
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
        settings.Settings.ShowHeaderFilterButton = true;

        settings.SettingsPager.PageSize = 15;
        settings.SettingsPager.EnableAdaptivity = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.CustomJSProperties = (sender, e) =>
        {
            e.Properties["cpVisibleRowCount"] = (sender as MVCxGridView).VisibleRowCount;
        };

        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.Dynamic;
            if (e.KeyValue != null)
            {
                if (e.Column.FieldName == "Code")
                {
                    e.Editor.ReadOnly = true;
                }
            }
            if (e.KeyValue == null)
            {
                if (e.Column.FieldName == "InOrder" || e.Column.FieldName== "IsKPI" || e.Column.FieldName == "Rating")
                {
                    e.Editor.Value = 0;
                }
            }
        };

    });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()