@{
    var grid = Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "gridViewItem3";
        settings.KeyFieldName = "Code";

        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;

        settings.CallbackRouteValues = new { Controller = "PRConfig", Action = "GridItemSoSe" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "PRConfig", Action = "CreateSoSe" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "PRConfig", Action = "EditSoSe" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "PRConfig", Action = "DeleteSoSe" };

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowCancelButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.Columns.Add(column =>
        {
            column.Width = 110;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Minimum");
            column.FieldName = "Minimum";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.DisplayFormatString = "N0";
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.MinValue = 0;
            spinEditProperties.MaxValue = 99999999999;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        });
        settings.Columns.Add(column =>
        {
            column.Width = 110;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Maximum");
            column.FieldName = "Maximum";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.DisplayFormatString = "N0";
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.MinValue = 0;
            spinEditProperties.MaxValue = 99999999999;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        });
        settings.Columns.Add(column =>
        {
            column.Width = 90;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Code");
            column.FieldName = "Code";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });

        settings.Columns.Add(column =>
        {
            column.Width = 250;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description");
            column.FieldName = "Description";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });
        settings.Columns.Add(column =>
        {
            column.Width = 110;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Amount");
            column.FieldName = "Amount";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.DisplayFormatString = "N2";
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.MinValue = 0;
            spinEditProperties.MaxValue = 99999999999;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        });
        settings.Columns.Add(column =>
        {
            column.Width = 150;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ValueBased");
            column.FieldName = "IsValueBased";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.DataSource = ViewData["SELECT_VALUES"];
            textProperties.TextFormatString = "{0}";
            textProperties.ValueField = "Code";
            textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
            textProperties.ValueType = typeof(string);
        });
        settings.Columns.Add(column =>
        {
            column.Width = 80;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Age");
            column.FieldName = "Age";
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.DisplayFormatString = "N0";
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.MinValue = 0;
            spinEditProperties.MaxValue = 99999999999;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        });
        settings.Columns.Add(column =>
        {
            column.Width = 150;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("SalaryType");
            column.FieldName = "SalaryType";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.DataSource = ViewData["SALARTYPE_SELECT"];
            textProperties.TextFormatString = "{0}";
            textProperties.ValueField = "Code";
            textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
            textProperties.ValueType = typeof(string);
        });
        settings.Columns.Add(column =>
        {
            column.Width = 100;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("IsEmpoyee");
            column.FieldName = "IsEmpoyee";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;
            var textProperties = column.PropertiesEdit as TextBoxProperties;
        });
        settings.Columns.Add(column =>
        {
            column.Width = 150;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("IncomeType");
            column.FieldName = "IncomeType";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.DataSource = ViewData["SELECT_INCOME_TYPE"];
            textProperties.TextFormatString = "{0}";
            textProperties.ValueField = "Code";
            textProperties.Columns.Add("IncomeType", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
            textProperties.ValueType = typeof(string);
        });
        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
        settings.SettingsEditing.EditFormColumnCount = 2;

        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
        settings.Settings.ShowHeaderFilterButton = true;

        settings.SettingsPager.PageSize = 15;
        settings.SettingsPager.EnableAdaptivity = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;

        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExportSelectedRowsOnly = true;

        settings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 800;
        settings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
        settings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;


        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.CustomJSProperties = (sender, e) =>
        {
            e.Properties["cpVisibleRowCount"] = (sender as MVCxGridView).VisibleRowCount;
        };

        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.Dynamic;
            if (e.KeyValue != null)
            {
                if (e.Column.FieldName == "Code")
                {
                    e.Editor.ReadOnly = true;
                }
            }
        };
    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()