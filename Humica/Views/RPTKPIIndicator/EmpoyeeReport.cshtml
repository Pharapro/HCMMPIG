@model Humica.Core.FT.FTFilerPerformance

@Html.DevExpress().FormLayout(settings =>
{
    int width = 180;
    settings.Name = "FTGernalAccounting";
    settings.AlignItemCaptionsInAllGroups = true;

    settings.Items.AddGroupItem(m => Model, g =>
    {
        g.ColCount = 2;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Company");
        })
.SetNestedContent(() =>
{
    Html.DevExpress().DropDownEditFor(i => Model.Company, s =>
    {
        s.Width = 171;
        s.Style.Add("margin-left", "2px");
        s.Properties.ClientInstanceName = "checkComboBoxCompany";
        //s.SkinID = "CheckComboBox";
        s.ReadOnly = false;
        s.SetDropDownWindowTemplateContent(c =>
        {
            Html.RenderPartial(Humica.Models.SY.SYListFilter.ListFilterViewCompany);

            ViewContext.Writer.Write("<div style=\"padding: 6px; height: 24px;\">");
            @Html.DevExpress().Button(buttonSettings =>
            {
                buttonSettings.Name = "buttonCloseCompany";
                buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Ok");
                buttonSettings.Style.Add("float", "right");
                buttonSettings.Style.Add("padding", "0px 2px");
                buttonSettings.ClientSideEvents.Click = "function(s, e){ checkComboBoxCompany.HideDropDown(); }";
                buttonSettings.Height = 26;
            }).Render();

            @Html.DevExpress().Button(buttonSettings =>
            {
                buttonSettings.Name = "buttonClearCompany";
                buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Clear");
                buttonSettings.Style.Add("float", "right");
                buttonSettings.Style.Add("margin", "0px 3px");
                buttonSettings.ClientSideEvents.Click = "clearSelectedCompany";
                buttonSettings.Height = 26;
            }).Render();
            ViewContext.Writer.Write("</div>");

        });
        s.Properties.AnimationType = AnimationType.None;
    }).Render();
});
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch") + "*";
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().DropDownEditFor(i => Model.Branch, s =>
           {
               s.Style.Add("margin-left", "2px");
               //s.Width = width;
               s.Properties.ClientInstanceName = "checkComboBoxBranch";
               //s.SkinID = "CheckComboBox";
               //s.ReadOnly = true;
               s.SetDropDownWindowTemplateContent(c =>
               {
                   Html.RenderPartial(Humica.Models.SY.SYListFilter.ListFilterViewBranch);

                   ViewContext.Writer.Write("<div style=\"padding: 6px; height: 24px;\">");
                   @Html.DevExpress().Button(buttonSettings =>
                   {
                       buttonSettings.Name = "buttonCloseBranch";
                       buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Ok");
                       buttonSettings.Style.Add("float", "right");
                       buttonSettings.Style.Add("padding", "0px 2px");
                       buttonSettings.ClientSideEvents.Click = "function(s, e){ checkComboBoxBranch.HideDropDown(); }";
                       buttonSettings.Height = 26;
                   }).Render();

                   @Html.DevExpress().Button(buttonSettings =>
                   {
                       buttonSettings.Name = "buttonClearBranch";
                       buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Clear");
                       buttonSettings.Style.Add("float", "right");
                       buttonSettings.Style.Add("margin", "0px 3px");
                       buttonSettings.ClientSideEvents.Click = "clearSelectedBranch";
                       buttonSettings.Height = 26;
                   }).Render();
                   ViewContext.Writer.Write("</div>");

               });
               s.Properties.AnimationType = AnimationType.None;
           }).Render();
       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Location");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().DropDownEditFor(i => Model.Locations, s =>
            {
                s.Width = 171;
                s.Style.Add("margin-left", "2px");
                s.Properties.ClientInstanceName = "checkComboBoxLocation";
                //s.SkinID = "CheckComboBox1";
                //  s.ReadOnly = true;
                s.SetDropDownWindowTemplateContent(c =>
                {
                    Html.RenderPartial(Humica.Models.SY.SYListFilter.ListFilterViewLocation);

                    ViewContext.Writer.Write("<div style=\"padding: 6px; height: 24px;\">");
                    @Html.DevExpress().Button(buttonSettings =>
                    {
                        buttonSettings.Name = "buttonCloseLocation";
                        buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Ok");
                        buttonSettings.Style.Add("float", "right");
                        buttonSettings.Style.Add("padding", "0px 2px");
                        buttonSettings.ClientSideEvents.Click = "function(s, e){ checkComboBoxLocation.HideDropDown(); }";
                        buttonSettings.Height = 26;
                    }).Render();

                    @Html.DevExpress().Button(buttonSettings =>
                    {
                        buttonSettings.Name = "buttonClearLocation";
                        buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Clear");
                        buttonSettings.Style.Add("float", "right");
                        buttonSettings.Style.Add("margin", "0px 3px");
                        buttonSettings.ClientSideEvents.Click = "clearSelectedLocation";
                        buttonSettings.Height = 26;
                    }).Render();
                    ViewContext.Writer.Write("</div>");

                });
                s.Properties.AnimationType = AnimationType.None;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
        })
           .SetNestedContent(() =>
           {
               Html.DevExpress().ComboBoxFor(i => Model.Division, s =>
               {
                   s.ShowModelErrors = true;
                   s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                   s.Properties.ValidationSettings.SetFocusOnError = true;
                   s.Properties.ValidationSettings.ErrorText = "*";
                   s.Properties.TextFormatString = "{0}";
                   s.Properties.ValueField = "Code";
                   s.Properties.TextField = "Description";
                   s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
               }).BindList(ViewData["DIVISION_SELECT"]).Render();
           });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("BusinessUnit");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.BusinessUnit, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.AllowNull = true;
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["BUSINESSUNIT_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Department, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                    s.Properties.ClientSideEvents.SelectedIndexChanged = "function(s, e) { validateBranchSelection(s); s.HideDropDown(); }";
                }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Office");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.Office, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.AllowNull = true;
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["OFFICE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Section, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["SECTION_SELECT"]).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Groups");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.Group, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.AllowNull = true;
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["GROUP_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Position, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["POSITION_SELECT"]).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("LevelCode");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => Model.Level, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "Code";
                    s.Properties.TextField = "Description";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["LEVEL_SELECT"]).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");
        })
       .SetNestedContent(() =>
       {
           Html.DevExpress().DropDownEditFor(i => Model.EmpCode, s =>
           {
               //s.Width = Unit.Percentage(85);
               s.Properties.ClientInstanceName = "checkComboBoxEmpCode";
               s.Style.Add("margin-left", "2px");
               //s.SkinID = "CheckComboBox";
               //s.ReadOnly = true;
               s.SetDropDownWindowTemplateContent(c =>
               {
                   Html.RenderPartial(Humica.Models.SY.SYListFilter.ListFilterViewEmp);

                   ViewContext.Writer.Write("<div style=\"padding: 6px; height: 24px;\">");
                   @Html.DevExpress().Button(buttonSettings =>
                   {
                       buttonSettings.Name = "buttonCloseEmpCode";
                       buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Ok");
                       buttonSettings.Style.Add("float", "right");
                       buttonSettings.Style.Add("padding", "0px 2px");
                       buttonSettings.ClientSideEvents.Click = "function(s, e){ checkComboBoxEmpCode.HideDropDown(); }";
                       buttonSettings.Height = 26;
                   }).Render();

                   @Html.DevExpress().Button(buttonSettings =>
                   {
                       buttonSettings.Name = "buttonClearEmpCode";
                       buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Clear");
                       buttonSettings.Style.Add("float", "right");
                       buttonSettings.Style.Add("margin", "0px 3px");
                       buttonSettings.ClientSideEvents.Click = "clearSelectedEmpCode";
                       buttonSettings.Height = 26;
                   }).Render();
                   ViewContext.Writer.Write("</div>");

               });
               s.Properties.AnimationType = AnimationType.None;
           }).Render();
       });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("InYear");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => Model.InYear, s =>
            {
                //s.Style.Add("margin-left", "38px");
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "#";
                s.Properties.NumberType = SpinEditNumberType.Integer;
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                s.Properties.MinValue = -1;
                s.Properties.MaxValue = 9999999999999;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Status");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.Status, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "SelectValue";
                s.Properties.TextField = "SelectText";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["STATUS_EMPLOYEE"]).Render();
        });
    });
}).Bind(Model).GetHtml()