@model Humica.Logic.IClsMyteamPlan
<script type="text/javascript">

    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_btnSaveActionGrid').click(function () {
            $("form").submit();
        });
        txtTotalAmount.SetEnabled(false);
    });
    function SelectEmp(s, e) {
        selectedIDs = s.GetSelectedItem().GetColumnText(0);
        ShowDataEmp();
    }
    function ShowDataEmp(s, e) {
        var total = 0;
        $.ajax({
            type: 'post',
            url: _baseUrl + '/HRM/Mission/MyTeamMissionPlan/ShowDataEmp',
            data: { 'EmpCode': selectedIDs, 'Action': 'Create', 'DocType': txtMissionType.GetValue() },
            success: function (data) {
                if (data.MS == "OK") {
                    txtPBranch.SetValue(data.Branch);
                    txtPDepartment.SetValue(data.dept);
                    txtPPosition.SetValue(data.Post);
                    txtPName.SetValue(data.Name);
                    GridApproval.Refresh();
                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);

            }
        });
    }
    function SelectChange(s, e) {
      $.ajax({
            type: 'post',
            url: "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + '/SelectMItemElement',
            data: { 'Actionname': 'Create','Code':s.GetValue()},
            success: function (data) {
                if (data.MS == "OK") {
                    //GridItem.Refresh();
                    GridMember.Refresh();
                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);
            }
        });
    }
    function selectParam(s, e) {
        $.ajax({
            type: 'post',
            url: _baseUrl + '/HRM/Mission/MyTeamMissionPlan/SelectParam',
            data: { 'DocType': txtMissionType.GetValue(), 'location': txtPBranch.GetValue(), 'department': txtPDepartment.GetValue() },
            success: function (data) {
                if (data.MS != "@Humica.EF.SYSConstant.OK") {
                    AlertMessage(data.MS);
                } else {
                    GridApproval.Refresh();

                }
            }
        });
    }
    function Selectstaff(s, e) {
        txtStaffName.SetValue(s.GetSelectedItem().GetColumnText(1));
        txtPosition.SetValue(s.GetSelectedItem().GetColumnText(2));
        txtDepartment.SetValue(s.GetSelectedItem().GetColumnText(3));
    }
    function EndCallBackM() {
        var total = 0;
        $.ajax({
            type: 'post',
            url: _baseUrl + '/HRM/Mission/MyTeamMissionPlan/RefreshTotal',
            data: {'action': 'Create' },
            success: function (data) {
                if (data.MS == "OK") {
                    txtMember.SetValue(data.TotalAmount);
                    txtProvince.SetValue(data.Province);
                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);

            }
        });
    }
    function EndCallBackProvince() {
        $.ajax({
            type: 'POST',
            url: _baseUrl + '/HRM/Mission/MyTeamMissionPlan/RefreshTotalProvince',
            data: { action: 'Create' },
            dataType: 'json',
            success: function (data) {
                if (data.MS === "OK") {
                    txtProvince.SetValue(data.Province);
                } else {
                    AlertMessage(data.MS);
                }
            },
            error: function (xhr) {
                AlertMessage("Error: " + xhr.responseText);
            }
        });
    }
    function OnClientValueChangedbackward(s, e) {
        var checked = s.GetChecked();
        txtTotalAmount.SetEnabled(checked);
        if (checked == false) {
            txtTotalAmount.SetValue(0);
        }
    }
    function approverChange(s, e) {
        gridName.SetValue(s.GetSelectedItem().GetColumnText(1));
        gridLevel.SetValue(s.GetSelectedItem().GetColumnText(2));
    }
</script>
@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "Create";
    settings.AlignItemCaptionsInAllGroups = true;

    settings.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("MissionCode");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.MissionCode, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.ReadOnly = true;
                s.Properties.NullDisplayText = Humica.EF.Models.SY.SYConstant.NEW_RECORD;
                s.Properties.NullText = Humica.EF.Models.SY.SYConstant.NEW_RECORD;
            }).Render();
        });

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Status");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Status, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Province");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.Province, s =>
            {

                s.Width = Unit.Percentage(80);
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtProvince";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N0";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Requester") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {

            Html.DevExpress().ComboBoxFor(i => i.Header.EmpCode, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextField = "EmpCode";
                s.Properties.TextFormatString = "{0}:{1}";
                s.Properties.ValueField = "EmpCode";
                s.Properties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("EmpCode"));
                s.Properties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("AllName"));
                s.Properties.Columns.Add("Position", Humica.EF.Models.SY.SYSettings.getLabel("Position"));
                s.Properties.Columns.Add("Department", Humica.EF.Models.SY.SYSettings.getLabel("Department"));
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                s.Properties.ClientSideEvents.SelectedIndexChanged = "SelectEmp";
            }).BindList(ViewData["STAFF_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpName");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.PlannerName, s =>
            {
                s.Properties.ClientInstanceName = "txtPName";
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Branch, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "txtPBranch";
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 250);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["BRANCHES_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DEPT");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.Department, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "txtPDepartment";
                s.ShowModelErrors = true;
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.AllowNull = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{1}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 70);
                s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 250);
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Position, s =>
            {
                s.Properties.ClientInstanceName = "txtPPosition";
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Total Member");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.Member, s =>
            {
                s.Width = Unit.Percentage(100);
                s.ReadOnly = true;
                s.Properties.ClientInstanceName = "txtMember";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N0";
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("MissionType") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.MissionType, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "txtMissionType";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "docType";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                s.Properties.ClientSideEvents.ValueChanged = "selectParam";
            }).BindList(ViewData["MISSION_TYPE_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {

            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("TravelBy") + "*";
            m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.TravelBy, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ClientInstanceName = "txtTravelBy";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["TRAVEL_BY_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("DocumentDate");
        })
            .SetNestedContent(() =>
            {
                Html.DevExpress().DateEditFor(i => i.Header.PlanDate, s =>
                {
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Distance") + "(KM)";
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.Distance, s =>
            {
                s.Width = Unit.Percentage(99);
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";

            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Credit Advance");

        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().CheckBoxFor(i => i.Header.Credit, s =>
            {
                s.Properties.ClientInstanceName = "txtCredit";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ClientSideEvents.CheckedChanged = "OnClientValueChangedbackward";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("TotalAmount");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.TotalAmount, s =>
            {
                s.Properties.ClientInstanceName = "txtTotalAmount";
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.DisplayFormatString = "N";
                s.Properties.NumberType = SpinEditNumberType.Integer;
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                s.Properties.MinValue = 0;
                s.Properties.MaxValue = 9999999999999;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description");
            m.ColumnSpan = 3;
        }).SetNestedContent(() =>
        {
            Html.DevExpress().MemoFor(i => i.Header.Description, s =>
            {
                s.Width = Unit.Percentage(100);
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
    });

}).GetHtml()

@Html.DevExpress().PageControl(settings =>
{
    settings.Name = "pcScrollingMaterialCreate";
    settings.Width = Unit.Percentage(100);
    settings.EnableTabScrolling = true;
    settings.TabAlign = TabAlign.Justify;
    settings.Styles.Tab.CssClass = "scrolling_Tab";
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Member")).SetContent(() =>
    {
        @Html.RenderPartial("GridMember", Model.ListMember);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("Location")).SetContent(() =>
    {
        @Html.RenderPartial("_Province", Model.ListProvince);
    });
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("ApprovalDetail")).SetContent(() =>
    {
        Html.RenderPartial("GridApprovalDetail", Model.ListApproval);
    });
}).GetHtml()