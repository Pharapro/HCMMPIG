@model Humica.EForm.IClsEFSPortal

<script type="text/javascript">
    $(document).ready(function () {

        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_bthEditAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Edit?PortalCode=@Model.Header.PortalCode" + "&QuestionCode=" + "@Model.Header.QuestionCode.ToString()";
        });
        $('#_btnDeleteAction').click(function () {
            ss = 4;
            ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DELETE_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
        });
    });
    function _clickConfirm(s, e) {
        if (s.GetText() == "@Humica.EF.Models.SY.SYConstant.OK") {
            if (ss == 4) {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Delete?PortalCode=@Model.Header.PortalCode" + "&QuestionCode=" + "@Model.Header.QuestionCode.ToString()";
            }
        }
    }
    function InitQCM(s, e) {
        var checked = s.GetChecked();
        txtPage.SetVisible(checked);
    }
</script>

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "MaterialDetails";
    settings.AlignItemCaptionsInAllGroups = true;

    settings.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 2;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("PortalType") + "*";
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => i.Header.PortalCode, s =>
            {
                s.ReadOnly = true;
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["PortalType_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("QuestionCode") + "*";
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().TextBoxFor(i => i.Header.QuestionCode, s =>
            {
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description1");
            m.ColumnSpan = 2;
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().MemoFor(i => i.Header.Description1, s =>
            {
                s.ReadOnly = true;
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Height = 70;
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description2");
            m.ColumnSpan = 2;
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().MemoFor(i => i.Header.Description2, s =>
            {
                s.ReadOnly = true;
                s.Width = Unit.Percentage(100);
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Height = 70;
            }).Render();
        });

    });
    settings.Items.AddGroupItem(m => Model.Header, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Is QCM");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().CheckBoxFor(i => i.Header.IsQCM, s =>
            {
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ClientSideEvents.Init = "InitQCM";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Is Required");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().CheckBoxFor(i => i.Header.IsRequired, s =>
            {
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("InOrder");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().SpinEditFor(i => i.Header.InOrder, s =>
            {
                s.ReadOnly = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.NumberType = SpinEditNumberType.Integer;
                s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
            }).Render();
        });
    });
}).GetHtml()

@Html.DevExpress().PageControl(settings =>
{
    settings.Name = "pcScrollingMaterial1";
    settings.Width = Unit.Percentage(100);

    settings.EnableTabScrolling = true;
    settings.TabAlign = TabAlign.Justify;
    settings.Name = "txtPage";
    settings.Styles.Tab.CssClass = "scrolling_Tab";
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel("QCM")).SetContent(() =>
    {
        Html.RenderPartial("GridItemsDetails", Model.ListSelfAssQCM);
    });
}).GetHtml()