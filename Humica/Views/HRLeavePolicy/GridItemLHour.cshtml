@{
    var grid = Html.DevExpress().GridView(
    settings =>
    {

        settings.Name = "GridItemsLHour";
        settings.KeyFieldName = "TranNo";
        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;

        settings.CallbackRouteValues = new { Controller = "HRLeavePolicy", Action = "GridItemLHour" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "HRLeavePolicy", Action = "CreateLHour" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "HRLeavePolicy", Action = "EditLHour" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "HRLeavePolicy", Action = "DeleteLHour" };

        settings.SettingsBehavior.AllowSort = false;
        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowDeleteButton = true;

        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsContextMenu.RowMenuItemVisibility.DeleteRow = false;
        settings.SettingsContextMenu.RowMenuItemVisibility.EditRow = false;
        settings.SettingsContextMenu.RowMenuItemVisibility.NewRow = false;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;

        settings.CommandColumn.ShowNewButtonInHeader = true;
        settings.CommandColumn.ShowCancelButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;

        settings.SettingsPager.PageSizeItemSettings.Visible = true;


        settings.Columns.Add(column =>
        {
            column.FieldName = "From";
            column.Width = 130;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("From(Min)");
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.DisplayFormatInEditMode = true;
            spinEditProperties.MinValue = 0;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "To";
            column.Width = 130;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("To(Min)");
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.DisplayFormatInEditMode = true;
            spinEditProperties.MinValue = 0;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Rate";
            column.Width = 130;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("rate(Min)");
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.Width = Unit.Percentage(100);
            spinEditProperties.DisplayFormatInEditMode = true;
            spinEditProperties.MinValue = 0;
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        });

        settings.SettingsSearchPanel.Visible = true;
        settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = Humica.EF.MD.SYSession.PageHieigh;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsPager.PageSize = 50;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.CustomJSProperties = (sender, e) =>
        {
            e.Properties["cpVisibleRowCount"] = (sender as MVCxGridView).VisibleRowCount;
        };
        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.Dynamic;
        };
    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.BindToEF(string.Empty, string.Empty, (s, e) =>
{
    e.KeyExpression = "TranNo";
    e.QueryableSource = Model.ListLHourPolicy;
}).GetHtml()