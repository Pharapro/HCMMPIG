@model Humica.Attendance.IAttendanceObject

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "FMonthly";
    settings.AlignItemCaptionsInAllGroups = true;
    int width = 150;
    settings.Items.AddGroupItem(m => Model.Attendance, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().DropDownEditFor(i => Model.Attendance.Branch, s =>
            {
                s.Width = 173;
                s.Properties.ClientInstanceName = "checkComboBoxBranch";
                s.SetDropDownWindowTemplateContent(c =>
                {
                    Html.RenderPartial(Humica.Models.SY.SYListFilter.ListFilterViewBranch);

                    ViewContext.Writer.Write("<div style=\"padding: 6px; height: 24px;\">");
                    @Html.DevExpress().Button(buttonSettings =>
                    {
                        buttonSettings.Name = "buttonCloseBranch";
                        buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Ok");
                        buttonSettings.Style.Add("float", "right");
                        buttonSettings.Style.Add("padding", "0px 2px");
                        buttonSettings.ClientSideEvents.Click = "function(s, e){ checkComboBoxBranch.HideDropDown(); }";
                        buttonSettings.Height = 26;
                    }).Render();

                    @Html.DevExpress().Button(buttonSettings =>
                    {
                        buttonSettings.Name = "buttonClearBranch";
                        buttonSettings.Text = Humica.EF.Models.SY.SYSettings.getLabel("Clear");
                        buttonSettings.Style.Add("float", "right");
                        buttonSettings.Style.Add("margin", "0px 3px");
                        buttonSettings.ClientSideEvents.Click = "clearSelectedBranch";
                        buttonSettings.Height = 26;
                    }).Render();
                    ViewContext.Writer.Write("</div>");
                });
                s.Properties.AnimationType = AnimationType.None;
            }).Render();
        });

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.Attendance.Division, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["DIVISION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Location");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.Attendance.Locations, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["LOCATION_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.Attendance.Department, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.TextFormatString = "{0}";
                s.Properties.ValueField = "Code";
                s.Properties.TextField = "Description";
                s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
            }).BindList(ViewData["DEPARTMENT_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Period");
        }).SetNestedContent(() =>
        {
            Html.DevExpress().ComboBoxFor(i => Model.Attendance.PeriodID, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.ValueField = "PeriodID";
                s.Properties.TextField = "PeriodString";
            }).BindList(ViewData["PERIOD_SELECT"]).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = "";
        }).SetNestedContent(() =>
        {
            Html.DevExpress().Button(s =>
            {
                s.Name = "_btnRunReport";
                s.ToolTip = Humica.EF.Models.SY.SYSettings.getLabel("Go");
                s.RenderMode = ButtonRenderMode.Button;
                s.Text = Humica.EF.Models.SY.SYSettings.getLabel("Go");
                s.UseSubmitBehavior = true;
                s.Images.Image.IconID = IconID.ActionsApply16x16;
            }).GetHtml();
        });

    });

}).Bind(Model).GetHtml()