
@{
    var grid = Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "GridItemSchedule";
        settings.KeyFieldName = "No";
        settings.EnableTheming = true;
        settings.EnableRowsCache = true;
        settings.Width = Unit.Percentage(80);
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        settings.SettingsEditing.BatchEditSettings.EditMode = GridViewBatchEditMode.Cell;
        settings.SettingsEditing.NewItemRowPosition = GridViewNewItemRowPosition.Bottom;


        settings.CallbackRouteValues = new { Controller = "ESSTrainingRequest", Action = "GridItemSchedule" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ESSTrainingRequest", Action = "EditSchedule" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ESSTrainingRequest", Action = "DeleteSchedule" };
        settings.SettingsBehavior.AllowSort = false;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.SettingsContextMenu.Enabled = true;
        settings.SettingsContextMenu.RowMenuItemVisibility.EditRow = false;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;

        settings.CommandColumn.ShowCancelButton = true;
        settings.CommandColumn.ShowEditButton = true;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;

        settings.SettingsPager.PageSizeItemSettings.Visible = true;
        settings.Columns.Add(column =>
        {
            column.ReadOnly = true;
            column.Width = 100;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("No");
            column.FieldName = "No";
        });

        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Train Date");
            column.FieldName = "TrainDate";
            column.ReadOnly = true;
            column.Width = 150;
            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.PropertiesEdit.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            var textProperties = column.PropertiesEdit as DateEditProperties;
            textProperties.NullDisplayText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            textProperties.EditFormat = EditFormat.Date;
            textProperties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();

        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "FromTime";
            column.Width = 150;
            column.PropertiesEdit.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "From Time");
            column.ColumnType = MVCxGridViewColumnType.TimeEdit;

        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "ToTime";
            column.Width = 150;
            column.PropertiesEdit.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel(ViewData[Humica.EF.SYSConstant.SCREEN_ID].ToString(), "To Time");
            column.ColumnType = MVCxGridViewColumnType.TimeEdit;

        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Hour");
            column.FieldName = "Hour";
            column.ReadOnly = true;
            var controlls = column.PropertiesEdit as TextBoxProperties;
            controlls.ClientInstanceName = "txtAmountHour";
            column.ColumnType = MVCxGridViewColumnType.TextBox;
        });
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;

        settings.SettingsPager.PageSize = 200;
        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
        settings.ClientSideEvents.EndCallback = "EndCallBack";
    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
  }

@grid.Bind(Model).GetHtml()
