@model Humica.Training.TrainningObject
<script type="text/javascript">

    var ss;
    var selectedIDs = "";
    var g_index = 0;
    var status = "@Model.RequestHeader.Status";
    var ID = "";

    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_bthEditAction').click(function () {
            if (status == "OPEN") {
                window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + "Edit?id=" + "@ViewData[Humica.EF.Models.SY.SYConstant.PARAM_ID]";
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }

        });
    });
    function _clickMenuAction(s, e) {
        if (e.item.name == "_mnApprove") {
            ss = 6;
            if (status == "PENDING") {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("APPROVE_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        }
        if (e.item.name == "_mnReject") {
            ss = 7;
            if (status == "PENDING") {
                ConfirmMessage("@Humica.EF.Models.SY.SYMessages.getMessage("REJECT_C", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
            else {
                AlertMessage("@Humica.EF.Models.SY.SYMessages.getMessage("DOC_INV", Humica.EF.MD.SYSession.getSessionUser().Lang)");
            }
        }
    }

    function _clickConfirm(s, e) {
        if (s.GetText() == "@Humica.EF.Models.SY.SYConstant.OK") {
            if (ss == 6) {
                PopUpRemark.Show();
            }
            if (ss == 7) {
                PopUpRemark.Show();
            }
        }
    }

    function _ConfirmRemark(s, e)
    {
        if (ss == 6) {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL].ToString()" + "Approve?TrainNo=" + "@Model.RequestHeader.TrainNo" + "&Comment=" + txtComment.GetValue();
            PopUpRemark.Hide();
        }
        if (ss == 7) {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL].ToString()" + "Reject?TrainNo=" + "@Model.RequestHeader.TrainNo" + "&Comment=" + txtComment.GetValue();
            PopUpRemark.Hide();
        }
    }

    function Selectstaff(s, e) {

        $.ajax({
            type: 'post',
            url: "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]" + '/Selectstaff',
            data: { "Actionname": "Create", "StaffID": cboStaff.GetValue() },
            success: function (data) {
                if (data.MS == "OK") {

                    txtStaffName.SetValue(data.NameEN);
                    txtGender.SetValue(data.Gender);
                    txtPosition.SetValue(data.Position);
                    txtPhoneNo.SetValue(data.Phone);
                    txtNatID.SetValue(data.NatID);
                    //txtHireDate.SetValue(data.HireDate);
                    txtWorkExperience.SetValue(data.WorkExperience);

                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);

            }
        });
    }

    function tabClickCommand1(s, e) {
        ID = 1;
        $("#_btnNewAction").hide();
        $("#_bthEditAction").show();
        $("#_btnImageView").show();
        $("#_btnReleaseAction").hide();
        $("#pageToolbar_DXI2i0_").hide();
        $("#_mnReject").show();
        $("#pageToolbar_DXI2i2_").show();
        $("#_mnApprove").show();
        $("#pageToolbar_DXI2i1_").show();

    }

</script>

<div class="general_form">
    @{
        Html.DevExpress().FormLayout(settings =>
        {
            settings.Name = "CreateCourse";
            settings.AlignItemCaptionsInAllGroups = true;
            settings.ClientSideEvents.Init = "tabClickCommand1";

            settings.Items.AddGroupItem(m => Model.RequestHeader, g =>
            {
                g.ColCount = 3;
                g.GroupBoxDecoration = GroupBoxDecoration.None;
                g.Caption = "RequestHeader Informaion";
                g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;

                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch") + "*";
                    m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().ComboBoxFor(i => i.RequestHeader.Branch, s =>
                    {
                        s.Width = Unit.Percentage(100);
                        s.ShowModelErrors = true;
                        s.ReadOnly = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.ClientInstanceName = "txtMissionType";
                        s.Properties.ValueField = "Code";
                        s.Properties.TextField = "Description";
                        s.Properties.TextFormatString = "{0}:{1}";
                        s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
                        s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
                        //s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                        s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
                            ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "_SELECT");
                        //s.Properties.ClientSideEvents.ValueChanged = "selectParam";
                    }).BindList(ViewData["BRANCHES_SELECT"]).Render();
                });
                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
                    )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Requester");
                })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().ComboBoxFor(i => Model.HeaderStaff.EmpCode, s =>
                    {
                        s.ShowModelErrors = true;
                        s.ReadOnly = true;
                        s.Properties.ClientInstanceName = "cboEmployee";
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.TextFormatString = "{1}";
                        s.Properties.ValueField = "EmpCode";
                        s.Properties.TextField = "AllName";
                        s.Properties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("EmpCode"), 150);
                        s.Properties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("AllName"), 300);
                        s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                    }).BindList(ViewData["Staff_List"]).Render();
                });

                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
               )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Request Date");

                })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().DateEditFor(i => i.RequestHeader.RequestDate, s =>
                    {
                        s.ShowModelErrors = true;
                        s.ReadOnly = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                        s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                        s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Department, s =>
                    {
                        s.Properties.ClientInstanceName = "txtDepartment";
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Position, s =>
                    {
                        s.Properties.ClientInstanceName = "txtPosition";
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Status");
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().TextBoxFor(i => i.RequestHeader.Status, s =>
                    {
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
                    )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Training Type");
                })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().ComboBoxFor(i => i.RequestHeader.TrainingType, s =>
                    {
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        //s.Properties.ClientSideEvents.SelectedIndexChanged = "SelectTrType";
                        s.Properties.ClientInstanceName = "txtTrType";
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.TextFormatString = "{1}";
                        s.Properties.ValueField = "Code";
                        s.Properties.TextField = "Description";
                        s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 150);
                        s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 300);
                        s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                    }).BindList(ViewData["TRAINING_TYPE"]).Render();
                });

                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
                    )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Training Course");
                })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().TextBoxFor(i => i.RequestHeader.TrainingCourse, s =>
                    {
                        s.ShowModelErrors = true;
                        s.ReadOnly = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });

                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
                    )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Training Category");
                })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().ComboBoxFor(i => i.RequestHeader.TrainingCategory, s =>
                    {
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.ClientInstanceName = "txtTrCatagory";
                        s.Properties.TextFormatString = "{2}";
                        s.Properties.ValueField = "Code";
                        s.Properties.TextField = "Description";
                        s.Properties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 80);
                        s.Properties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 150);
                        s.Properties.Columns.Add("SecondDescription", Humica.EF.Models.SY.SYSettings.getLabel("Category"), 150);
                        s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                    }).BindList(ViewData["COURSE_CATAGORY_SELECT"]).Render();
                });

                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
                        )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Traininer Name");
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().TextBoxFor(i => i.RequestHeader.TrainerName, s =>
                    {
                        s.ShowModelErrors = true;
                        s.ReadOnly = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
                      )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Training Fee" + "($)");
                    m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().TextBoxFor(i => i.RequestHeader.TrainingFee, s =>
                    {
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        //s.Width = Unit.Percentage(270);
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Number of Employee Join");
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().SpinEditFor(i => i.RequestHeader.NumOfEmpJoin, s =>
                    {
                        s.ReadOnly = true;
                        //s.ClientVisible = false;
                        s.Properties.ClientInstanceName = "txtCapacity";
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.DisplayFormatString = "N0";
                        s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                    }).Render();
                });
                g.Items
                .Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
                       )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "From Date" + "*");
                    m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
                })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().DateEditFor(i => i.RequestHeader.FromDate, s =>
                    {
                        s.ShowModelErrors = true;
                        s.ReadOnly = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                        s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                        s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.ClientInstanceName = "txtFromDate";
                        //s.Properties.ClientSideEvents.ValueChanged = "OnClientValueChanged";
                    }).Render();
                });

                g.Items
                .Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
                       )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "To Date" + "*");
                    m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
                })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().DateEditFor(i => i.RequestHeader.ToDate, s =>
                    {
                        s.ShowModelErrors = true;
                        s.ReadOnly = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                        s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                        s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.ClientInstanceName = "txtToDate";
                        //s.Properties.ClientSideEvents.ValueChanged = "OnClientValueChanged";
                    }).Render();
                });
                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Duration" + "(Day)");
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().SpinEditFor(i => i.RequestHeader.Duration, s =>
                    {
                        s.ReadOnly = true;
                        //s.ClientVisible = false;
                        s.Properties.ClientInstanceName = "txtDuration";
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.DisplayFormatString = "N2";
                        s.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
                    }).Render();
                });
                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Briefing shairing session date");
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().DateEditFor(i => i.RequestHeader.SessDate, s =>
                    {
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                        s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                        s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                        s.Properties.ValidationSettings.ErrorText = "*";
                        s.Properties.ClientInstanceName = "txtSeDate";
                    }).Render();
                });

                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Attachment");
                })
                .SetNestedContent(() =>
                {
                    Html.DevExpress().HyperLink(s =>
                    {
                        // s.Name = "file_uploaded";
                        s.ToolTip = "File";
                        s.ClientVisible = true;
                        s.Properties.Target = "_BLANK";
                        s.NavigateUrl = Model.RequestHeader.AttachFile;
                        s.Properties.Text = Humica.EF.Models.SY.SYSettings.getLabel("View");
                    }).GetHtml();
                });

                g.Items.AddEmptyItem();

                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Training Center");
                    m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().TextBoxFor(i => i.RequestHeader.Locations, s =>
                    {
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(440);
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
                g.Items.AddEmptyItem();
                g.Items.AddEmptyItem();

                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Detail/Purpose" + "*");
                    m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().MemoFor(i => i.RequestHeader.Purpose, s =>
                    {
                        s.ReadOnly = true;
                        //s.ClientVisible = false;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(440);
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
                g.Items.AddEmptyItem();
                g.Items.AddEmptyItem();

                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Scope of Training" + "*");
                    m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().MemoFor(i => i.RequestHeader.Scopes, s =>
                    {
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(440);
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
                g.Items.AddEmptyItem();
                g.Items.AddEmptyItem();

                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Expected Result" + "*");
                    m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().MemoFor(i => i.RequestHeader.Expected, s =>
                    {
                        s.ReadOnly = true;
                        s.ShowModelErrors = true;
                        s.Width = Unit.Percentage(440);
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });
                g.Items.AddEmptyItem();
                g.Items.AddEmptyItem();

                g.Items.Add(m =>
                {
                    m.Caption = Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>
                      )ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Remark");
                }).SetNestedContent(() =>
                {
                    Html.DevExpress().MemoFor(i => i.RequestHeader.Remark, s =>
                    {
                        s.ShowModelErrors = true;
                        s.ReadOnly = true;
                        s.Width = Unit.Percentage(440);
                        s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                        s.Properties.ValidationSettings.SetFocusOnError = true;
                        s.Properties.ValidationSettings.ErrorText = "*";
                    }).Render();
                });

            });
        }).GetHtml();

    }
    <br />
    <br />
    @Html.DevExpress().PageControl(
settings =>
{
    settings.Name = "pcScrollingWorkCalendar";
    settings.Width = Unit.Percentage(100);

    settings.EnableTabScrolling = true;
    settings.TabAlign = TabAlign.Justify;

    settings.Styles.Tab.CssClass = "scrolling_Tab";
    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
    ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Trainee(s) Information")).SetContent(() =>
    {
        Html.DevExpress().Button(s =>
        {
            s.Name = "btnAddNew";
            s.Width = Unit.Percentage(10);
            s.Text = "Add";
        }).Render();
        Html.RenderPartial("GridItemDetails", Model);
        Html.RenderPartial("partialemployeesearch", Model);
    });

    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
    ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "ApprovalDetail")).SetContent(() =>
    {
        Html.RenderPartial("GridApprovalDetail", Model.ListApproval);
    });

    settings.TabPages.Add(Humica.EF.Models.SY.SYSettings.getLabel((List<Humica.EF.MD.CFForm>)
    ViewData[Humica.EF.SYSConstant.LIST_CONF_FORM], "Schedule")).SetContent(() =>
    {
        Html.RenderPartial("GridItemScheduleDetail", Model.ListSchedule);
    });

}).GetHtml()
@Html.Partial("PopUpRemark")

<div hidden="hidden">
@{
    var grid1 = Html.DevExpress().GridView(s =>
    {
        s.Name = "gvemployeeselector";
        s.KeyFieldName = "EmpCode";
        s.Width = Unit.Percentage(100);
        s.Height = Unit.Percentage(100);
        s.SettingsSearchPanel.Visible = true;
        s.SettingsBehavior.ConfirmDelete = false;
        s.CommandColumn.Visible = true;
        s.SettingsDataSecurity.AllowReadUnlistedFieldsFromClientApi = DefaultBoolean.True;
        s.CallbackRouteValues = new { Action = "gvemployeeselector", Controller = "ESSTrainingRequest" };

        s.Settings.ShowGroupPanel = false;
        s.Settings.ShowFooter = true;
        s.SettingsContextMenu.Enabled = false;
        s.SettingsContextMenu.RowMenuItemVisibility.DeleteRow = false;
        s.SettingsContextMenu.RowMenuItemVisibility.EditRow = false;
        s.SettingsContextMenu.RowMenuItemVisibility.NewRow = false;
        s.Settings.ShowHeaderFilterButton = true;
        s.SettingsPopup.HeaderFilter.Height = 200;
        s.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;
        s.CommandColumn.ShowSelectCheckbox = true;
        s.CommandColumn.Width = 50;
        s.SettingsBehavior.AllowFocusedRow = true;
        s.Columns.Add(col =>
        {
            col.FieldName = "EmpCode";
            col.Width = 100;
            col.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Code");
        });

        s.Columns.Add(col =>
        {
            col.Width = 200;
            col.FieldName = "AllName";
            col.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Name");
        });

        s.SettingsBehavior.EnableCustomizationWindow = false;
        //s.ClientSideEvents.SelectionChanged = "OnSelectionChanged";
        s.SettingsPager.Position = PagerPosition.Bottom;
        s.SettingsPager.FirstPageButton.Visible = true;
        s.SettingsPager.LastPageButton.Visible = true;
        s.SettingsBehavior.AllowEllipsisInText = true;
        s.SettingsPager.PageSize = 5;
    }).Bind(Model.ListStaffs).GetHtml();
}

</div>
</div>














