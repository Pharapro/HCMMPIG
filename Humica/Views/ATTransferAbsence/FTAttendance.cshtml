@model Humica.Attendance.ITransferAbsenceObject

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "FTAttendance";
    settings.AlignItemCaptionsInAllGroups = true;
    int width = 150;

    settings.Items.AddGroupItem(m => Model.Attendance, g =>
    {
        g.ColCount = 3;
        g.GroupBoxDecoration = GroupBoxDecoration.None;
        g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;

        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("FromDate");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => Model.Attendance.FromDate, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ClientInstanceName = "txtFromDate";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            }).Render();
        });
        g.Items.Add(m =>
        {
            m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ToDate");
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().DateEditFor(i => Model.Attendance.ToDate, s =>
            {
                s.ShowModelErrors = true;
                s.Properties.ClientInstanceName = "txtToDate";
                s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                s.Properties.ValidationSettings.SetFocusOnError = true;
                s.Properties.ValidationSettings.ErrorText = "*";
                s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
            }).Render();
        });

        g.Items.Add(m =>
        {
            m.Caption = "";
        })
        .SetNestedContent(() =>
        {
            Html.DevExpress().Button(
            s =>
            {
                  s.Name = "_btnRunReport";
                  s.ToolTip = Humica.EF.Models.SY.SYSettings.getLabel("Go");
                  s.RenderMode = ButtonRenderMode.Button;
                  s.Text = Humica.EF.Models.SY.SYSettings.getLabel("Go");
                  s.UseSubmitBehavior = true;
                  s.Images.Image.IconID = IconID.ActionsApply16x16;
            }).GetHtml();
        });

    });

}).Bind(Model).GetHtml()