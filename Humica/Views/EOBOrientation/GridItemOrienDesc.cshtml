@{
    var grid = Html.DevExpress().GridView(
  settings =>
  {

      settings.Name = "GridItemOrienDesc";
      settings.KeyFieldName = "Code";

      settings.Width = Unit.Percentage(100);
      settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
      settings.CallbackRouteValues = new { Controller = "EOBOrientation", Action = "GridItemOrienDesc" };

      settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "EOBOrientation", Action = "CreateOrienDesc" };
      settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "EOBOrientation", Action = "EditOrienDesc" };
      settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "EOBOrientation", Action = "DeleteOrienDesc" };


      settings.CommandColumn.Visible = true;
      settings.CommandColumn.ShowDeleteButton = true;

      settings.CommandColumn.ShowNewButtonInHeader = true;
      settings.CommandColumn.ShowCancelButton = true;
      settings.CommandColumn.ShowEditButton = true;
      settings.SettingsBehavior.AllowFocusedRow = true;

      settings.Columns.Add(column =>
      {
          column.Width = 150;
          column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Typical Duration");
          column.FieldName = "Code";
          column.ColumnType = MVCxGridViewColumnType.ComboBox;
          var textProperties = column.PropertiesEdit as ComboBoxProperties;
          textProperties.ClientSideEvents.SelectedIndexChanged = "TypicalCode";
          textProperties.ValidationSettings.Display = Display.None;
          textProperties.DataSource = ViewData["TYPIDURTYPE_SELECT"];
          textProperties.TextField = "Description";
          textProperties.ValueField = "Code";
          textProperties.TextFormatString = "{1}";
          textProperties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 90);
          textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
          textProperties.Columns.Add("Duration", Humica.EF.Models.SY.SYSettings.getLabel("Duration"), 75);
      });

      settings.Columns.Add(column =>
      {
          column.Width = 300;
          column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
          column.FieldName = "Position";
          column.ColumnType = MVCxGridViewColumnType.ComboBox;
          var textProperties = column.PropertiesEdit as ComboBoxProperties;
          textProperties.ClientSideEvents.SelectedIndexChanged = "Code";
          textProperties.ValidationSettings.Display = Display.None;
          textProperties.DataSource = ViewData["POSITION_SELECT"];
          textProperties.TextField = "Description";
          textProperties.ValueField = "Code";
          textProperties.TextFormatString = "{1}";
          textProperties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 90);
          textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
      });
      settings.Columns.Add(column =>
      {
          column.Width = 300;
          column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
          column.ColumnType = MVCxGridViewColumnType.SpinEdit;
          column.FieldName = "Department";
          column.ColumnType = MVCxGridViewColumnType.ComboBox;
          var textProperties = column.PropertiesEdit as ComboBoxProperties;
          textProperties.ClientSideEvents.SelectedIndexChanged = "Code";
          textProperties.ValidationSettings.Display = Display.None;
          textProperties.DataSource = ViewData["DEPARTMENT_SELECT"];
          textProperties.TextField = "Description";
          textProperties.ValueField = "Code";
          textProperties.TextFormatString = "{1}";
          textProperties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"), 90);
          textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
      });
      settings.Columns.Add(column =>
      {
          column.Width = 200;
          column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Orienteering Name");
          column.ColumnType = MVCxGridViewColumnType.ComboBox;
          column.FieldName = "OrienteerCode";
          var textProperties = column.PropertiesEdit as ComboBoxProperties;
          textProperties.ValidationSettings.Display = Display.None;
          textProperties.ClientSideEvents.SelectedIndexChanged = "EmpCode";
          textProperties.DataSource = ViewData["STAFF_SELECT"];
          textProperties.TextField = "AllName";
          textProperties.ValueField = "EmpCode";
          textProperties.TextFormatString = "{1}";
          textProperties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("Employee Code"), 90);
          textProperties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("Employee Name"), 200);
          textProperties.ValueType = typeof(string);
      });
      settings.Columns.Add(column =>
      {
          column.Width = 600;
          column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Description");
          column.ColumnType = MVCxGridViewColumnType.Memo;
          (column.PropertiesEdit as MemoProperties).Height = 150;
          column.FieldName = "Description";
      });
      settings.Columns.Add(column =>
      {
          column.Width = 75;
          column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Duration");
          column.ColumnType = MVCxGridViewColumnType.TextBox;
          column.FieldName = "Duration";
          var textProperties = column.PropertiesEdit as TextBoxProperties;
          textProperties.ClientInstanceName = "txtDuration";
      });

      settings.SettingsSearchPanel.Visible = true;
      settings.SettingsBehavior.ConfirmDelete = true;

      settings.Settings.ShowGroupPanel = false;
      settings.Settings.ShowFooter = true;
      settings.SettingsContextMenu.Enabled = true;
      settings.SettingsContextMenu.RowMenuItemVisibility.DeleteRow = false;
      settings.SettingsContextMenu.RowMenuItemVisibility.EditRow = false;
      settings.SettingsContextMenu.RowMenuItemVisibility.NewRow = false;
      settings.Settings.ShowHeaderFilterButton = true;
      settings.SettingsPopup.HeaderFilter.Height = 200;

      settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Control;
      settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
      settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
      settings.Settings.VerticalScrollableHeight = Humica.EF.MD.SYSession.PageHieigh;
      settings.SettingsPager.PageSize = 20;

      settings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
      settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
      settings.Settings.ShowHeaderFilterButton = true;

      settings.SettingsPager.EnableAdaptivity = true;
      settings.SettingsPager.PageSizeItemSettings.Visible = true;

      settings.SettingsExport.EnableClientSideExportAPI = true;
      settings.SettingsExport.ExportSelectedRowsOnly = true;

      settings.SettingsPopup.EditForm.SettingsAdaptivity.MaxWidth = 800;
      settings.SettingsPopup.EditForm.SettingsAdaptivity.Mode = PopupControlAdaptivityMode.Always;
      settings.SettingsPopup.EditForm.SettingsAdaptivity.VerticalAlign = PopupAdaptiveVerticalAlign.WindowCenter;

      settings.SettingsBehavior.AllowFocusedRow = true;


      settings.PreRender = (sender, e) =>
      {
          //((MVCxGridView)sender).StartEdit(1);
      };

      settings.CellEditorInitialize = (s, e) =>
      {
          ASPxEdit editor = (ASPxEdit)e.Editor;
          editor.ValidationSettings.Display = Display.None;
          if (e.Column.FieldName == "Code")
          {
              if (e.KeyValue != null)
              {
                  e.Editor.ReadOnly = true;
              }
          }

          if (e.Column.FieldName == "Department")
          {
              if (e.KeyValue != null)
              {
                  e.Editor.ReadOnly = true;
              }
          }
          if (e.KeyValue != null)
          {
              if (e.Column.FieldName == "OrienteerCode")
              {
                  e.Editor.ReadOnly = true;
              }
          }
      };

  });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model).GetHtml()


