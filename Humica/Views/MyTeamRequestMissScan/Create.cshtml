@model Humica.Attendance.IClsATRequestMissScan
<script type="text/javascript">

    $(document).ready(function () {
        $('#_btnBackAction').click(function () {
            window.location = "@Humica.EF.Models.SY.SYUrl.getBaseUrl()" + "@ViewData[Humica.EF.Models.SY.SYConstant.CURRENT_URL]";
        });
        $('#_btnSaveActionGrid').click(function () {
            $("form").submit();
        });

    });
    function approverChange(s, e) {
        gridLevel.SetValue(s.GetSelectedItem().GetColumnText(2));
    }
    function SelectEmp(s, e) {
        selectedIDs = s.GetSelectedItem().GetColumnText(0);
        ShowDataEmp();
    }

    function ShowDataEmp() {
        var total = 0;
        $.ajax({
            type: 'post',
            url: _baseUrl + '/SelfService/MyTeam/MyTeamRequestMissScan/ShowDataEmp',
            data: { 'EmpCode': selectedIDs },
            success: function (data) {
                if (data.MS == "OK") {
                    var StartDate = data.StartDate;
                    nowDate = new Date(parseInt(StartDate.substr(6)));
                    txtAllName.SetValue(data.AllName);
                    txtBranch.SetValue(data.Branch);
                    txtDivision.SetValue(data.Division);
                    txtDepartment.SetValue(data.DEPT);
                    txtSection.SetValue(data.SECT);
                    //txtLevel.SetValue(data.LevelCode);
                    txtPosition.SetValue(data.Position);
                    txtLocation.SetValue(data.location);
                    txtStartDate.SetValue(nowDate);
                }
                else {
                    AlertMessage(data.MS);
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                AlertMessage(XMLHttpRequest.responseText);

            }
        });
    }
    function selectRemarkCode(s, e) {
        txtRemark.SetEnabled(false);
        var ReqType = s.GetSelectedItem().GetColumnText(0);
        if (ReqType == "Miss Scan") {
            txtRemark.SetEnabled(true);
            txtQty.SetEnabled(false);
            txtQty.SetValue(0);
        }
        else {
            txtRemark.SetValue() == "";
            txtQty.SetEnabled(true);
            txtQty.SetValue(0);
        }

    }
    // Format the time for server-side DateTime parsing
    function formatTimeForServer(dateTimeObj) {
        if (!dateTimeObj) return '';

        // DevExpress TimeEdit returns date in specific format
        var date = new Date(parseInt(dateTimeObj.substr(6)));
        var formatted = date.getFullYear() + '-' +
            (date.getMonth() + 1).toString().padStart(2, '0') + '-' +
            date.getDate().toString().padStart(2, '0') + ' ' +
            date.getHours().toString().padStart(2, '0') + ':' +
            date.getMinutes().toString().padStart(2, '0');

        return formatted;
    }
</script>

@{
    Html.DevExpress().FormLayout(settings =>
    {

        settings.Name = "Request Late/Early";
        settings.AlignItemCaptionsInAllGroups = true;

        settings.Items.AddGroupItem(m => Model.Header, g =>
        {

            g.ColCount = 2;
            g.GroupBoxDecoration = GroupBoxDecoration.None;
            g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode") + "*";
                m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => i.Header.EmpCode, s =>
                {
                    s.Properties.ClientInstanceName = "cboEmployee";
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextField = "AllName";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "EmpCode";
                    s.Properties.Columns.Add("EmpCode", Humica.EF.Models.SY.SYSettings.getLabel("EmpCode"));
                    s.Properties.Columns.Add("AllName", Humica.EF.Models.SY.SYSettings.getLabel("AllName"));
                    s.Properties.Columns.Add("OthAllName", Humica.EF.Models.SY.SYSettings.getLabel("OthAllName"));
                    s.Properties.ClientSideEvents.SelectedIndexChanged = "SelectEmp";
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["STAFF_SELECT"]).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("AllName");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TextBoxFor(i => i.Header.EmpName, s =>
                {
                    s.Properties.ClientInstanceName = "txtAllName";
                    s.ReadOnly = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Branch");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Branch, s =>
                {
                    s.Properties.ClientInstanceName = "txtBranch";
                    s.ReadOnly = true;
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Division");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TextBoxFor(i => i.HeaderStaff.DivisionDesc, s =>
                {
                    s.Properties.ClientInstanceName = "txtDivision";
                    s.ReadOnly = true;
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Department");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Department, s =>
                {
                    s.Properties.ClientInstanceName = "txtDepartment";
                    s.ReadOnly = true;
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Section");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Section, s =>
                {
                    s.Properties.ClientInstanceName = "txtSection";
                    s.ReadOnly = true;
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("LevelCode");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Level, s =>
                {
                    s.Properties.ClientInstanceName = "txtLevel";
                    s.ReadOnly = true;
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Position");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TextBoxFor(i => i.HeaderStaff.Position, s =>
                {
                    s.Properties.ClientInstanceName = "txtPosition";
                    s.ReadOnly = true;
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("StartDate");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().DateEditFor(i => i.HeaderStaff.StartDate, s =>
                {
                    s.Properties.ClientInstanceName = "txtStartDate";
                    s.ReadOnly = true;
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.NullText = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.EditFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.DisplayFormatString = ViewData[Humica.EF.SYSConstant.DATE_FORMAT].ToString();
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
        });
        settings.Items.AddGroupItem(m => Model.Header, g =>
        {
            g.ColCount = 2;
            g.GroupBoxDecoration = GroupBoxDecoration.None;
            g.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;

            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Request Type") + "*";
                m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().ComboBoxFor(i => i.Header.RequestType, s =>
                {
                    s.Width = Unit.Percentage(100);
                    s.Properties.ClientInstanceName = "txtReqType";
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                    s.Properties.TextField = "SelectText";
                    s.Properties.TextFormatString = "{0}";
                    s.Properties.ValueField = "SelectValue";
                    s.Properties.Columns.Add("SelectText", Humica.EF.Models.SY.SYSettings.getLabel("Description"));
                    s.Properties.NullText = Humica.EF.Models.SY.SYSettings.getLabel("_SELECT");
                }).BindList(ViewData["MISSSCAN_SELECT"]).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Request Date");
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().DateEditFor(i => i.Header.RequestDate, s =>
                {
                    s.Properties.ClientInstanceName = "txtFromDate";
                    s.ShowModelErrors = true;
                    s.ReadOnly = true;
                    s.Width = Unit.Percentage(100);
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.NullText = "dd.MM.yyyy";
                    s.Properties.EditFormatString = "dd.MM.yyyy";
                    s.Properties.DisplayFormatString = "dd.MM.yyyy";
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Miss Scan Date") + "*";
                m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().DateEditFor(i => i.Header.MissscanDate, s =>
                {
                    s.Properties.ClientInstanceName = "txtFromDate";
                    s.ShowModelErrors = true;
                    s.Properties.AllowNull = false;
                    s.Width = Unit.Percentage(100);
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.NullText = "dd.MM.yyyy";
                    s.Properties.EditFormatString = "dd.MM.yyyy";
                    s.Properties.DisplayFormatString = "dd.MM.yyyy";
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Time") + "*";
                m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TimeEditFor(i => i.Header.Time, s =>
                {
                    s.Properties.DisplayFormatString = "h:mm tt";
                    s.Properties.EditFormat = EditFormat.Time;
                    s.Properties.AllowNull = false;
                }).Render();
            });
            g.Items.Add(m =>
            {
                m.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Reason") + "*";
                m.CaptionStyle.ForeColor = System.Drawing.Color.Red;
                m.ColSpan = 2;
            })
            .SetNestedContent(() =>
            {
                Html.DevExpress().TextBoxFor(i => i.Header.Reason, s =>
                {
                    s.Width = Unit.Percentage(100);
                    s.ShowModelErrors = true;
                    s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                    s.Properties.ValidationSettings.SetFocusOnError = true;
                    s.Properties.ValidationSettings.ErrorText = "*";
                }).Render();
            });
        });
    }).GetHtml();

}