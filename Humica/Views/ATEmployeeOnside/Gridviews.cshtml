@{
    var grid = Html.DevExpress().GridView(
    settings =>
    {
        Html.EnableClientValidation();
        Html.EnableUnobtrusiveJavaScript();
        settings.Name = "Gridviews";
        settings.KeyFieldName = "TranNo";
        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;

        settings.CallbackRouteValues = new { Controller = "ATEmployeeOnside", Action = "Gridviews" };

        settings.SettingsBehavior.AllowFocusedRow = true;

        settings.Columns.Add(column =>
        {
            column.Width = 125;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("EmpCode");
            column.FieldName = "EmpCode";
        });
        settings.Columns.Add(column =>
        {
            column.Width = 135;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("AllName");
            column.FieldName = "AllName";
        });
        settings.Columns.Add(column =>
        {
            column.Width = 160;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("ScanDate");
            column.FieldName = "ScanDate";

            column.ColumnType = MVCxGridViewColumnType.DateEdit;
            column.PropertiesEdit.DisplayFormatString = "dd.MM.yyyy h:mm tt";
        });

        settings.Columns.Add(column =>
        {
            column.Width = 160;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Longitude");
            column.FieldName = "Longitude";
        });

        settings.Columns.Add(column =>
        {
            column.Width = 160;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("latitude");
            column.FieldName = "latitude";
        });

        settings.Columns.Add(column =>
        {
            column.Width = 120;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Attachment");
            column.FieldName = "Attachment";
            //column.ReadOnly = true;
            //column.EditorProperties().Image(i => i.ImageWidth = 180);
            column.SetDataItemTemplateContent(container =>
            {
                Html.DevExpress().ImageZoom(
                     ss =>
                     {
                         ss.Name = "imageZoom3" + container.VisibleIndex;
                         ss.ImageUrl = Convert.ToString(DataBinder.Eval(container.DataItem, "Attachment"));
                         ss.LargeImageUrl = Convert.ToString(DataBinder.Eval(container.DataItem, "Attachment"));
                         ss.Height = 25;
                         ss.Width = 150;
                         ss.EnableExpandMode = true;
                         ss.ShowHint = true;
                         ss.LargeImageLoadMode = LargeImageLoadMode.OnPageLoad;
                         ss.SettingsZoomMode.ZoomWindowPosition = ZoomWindowPosition.Right;
                         ss.SettingsZoomMode.MouseBoxOpacityMode = MouseBoxOpacityMode.Outside;
                         ss.SettingsZoomMode.ZoomWindowHeight = 300;
                         ss.SettingsZoomMode.ZoomWindowWidth = 500;
                         ss.ZoomWindowText = "Zoom Window Text";
                         ss.ExpandWindowText = "Expand Window Text";
                     }).GetHtml();
            });
            Html.DevExpress().HyperLink(
                 s =>
                 {
                     s.Name = "file2_uploaded";
                     s.ToolTip = "File2";
                     s.ClientVisible = false;
                     s.Properties.Target = "_BLANK";
                     s.Properties.Text = Humica.EF.Models.SY.SYSettings.getLabel("View");

                 }).GetHtml();
        });

        settings.Columns.Add(column =>
        {
            column.Width = 230;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Location");
            column.FieldName = "Location";
        });
        settings.Columns.Add(column =>
        {
            column.Width = 100;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Map URL");
            column.FieldName = "MapURL";
            settings.KeyFieldName = "MapURL";
            column.CellStyle.HorizontalAlign = HorizontalAlign.Center;
            column.CellStyle.VerticalAlign = VerticalAlign.Middle;
            column.SetDataItemTemplateContent(c =>
            {
                string filePath = (string)DataBinder.Eval(c.DataItem, "MapURL");

                if (!string.IsNullOrWhiteSpace(filePath) && !filePath.Equals("NULL", StringComparison.OrdinalIgnoreCase))
                {
                    var hyperlink = Html.DevExpress().HyperLink(s =>
                    {
                        s.ToolTip = "Map URL";
                        s.NavigateUrl = filePath;
                        s.Properties.Target = "_blank";
                        s.Properties.Text = Humica.EF.Models.SY.SYSettings.getLabel("Link");
                        s.Style["display"] = "inline-block";
                        s.Style["width"] = "100%";
                    });

                    @Html.Raw(hyperlink.GetHtml());
                }
                else
                {
                    @Html.Raw("&nbsp;");
                }
            });
        });
        settings.Columns.Add(column =>
        {
            column.Width = 140;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Remark");
            column.FieldName = "Remark";
        });
        settings.SettingsSearchPanel.Visible = true;
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Visible;
        settings.Settings.VerticalScrollableHeight = Humica.EF.MD.SYSession.PageHieigh;
        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsPager.PageSize = 520;
        settings.SettingsDataSecurity.AllowReadUnlistedFieldsFromClientApi = DefaultBoolean.True;
        settings.SettingsExport.ExcelExportMode = DevExpress.Export.ExportType.WYSIWYG;
        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.FileName = "Employee On-Site";
        settings.Toolbars.Add(t =>
        {
            t.Items.Add(GridViewToolbarCommand.ExportToXlsx);
        });
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.Settings.ShowHeaderFilterButton = true;
        settings.SettingsPopup.HeaderFilter.Height = 200;
        settings.SettingsBehavior.AllowEllipsisInText = true;
        settings.SettingsContextMenu.Enabled = true;
        settings.CustomJSProperties = (sender, e) =>
        {
            e.Properties["cpVisibleRowCount"] = (sender as MVCxGridView).VisibleRowCount;
        };

    });
}
@grid.Bind(Model.ListEmpOnSite).GetHtml()