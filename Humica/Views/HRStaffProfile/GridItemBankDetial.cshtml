@{
    var grid = Html.DevExpress().GridView(
    settings =>
    {

        settings.Name = "GridItemBank";
        settings.KeyFieldName = "LineItem";

        settings.Width = Unit.Percentage(100);
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;

        settings.CallbackRouteValues = new { Controller = "HRStaffProfile", Action = "saparateDetail" };

        settings.CommandColumn.Visible = false;
        settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.Columns.Add(column =>
        {
            column.Width = 50;
            column.Visible = false;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("No");
            column.FieldName = "LineItem";
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Company Name");
            column.Width = 150;
            column.FieldName = "Company";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.ValidationSettings.Display = Display.None;
            textProperties.DataSource = ViewData["Company_SELECT"];
            textProperties.TextFormatString = "{1}";
            textProperties.ValueField = "Company";
            textProperties.Columns.Add("Company", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
            textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
            textProperties.ValueType = typeof(string);
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Bank Name");
            column.Width = 150;
            column.FieldName = "BankName";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            var textProperties = column.PropertiesEdit as ComboBoxProperties;
            textProperties.ValidationSettings.Display = Display.None;
            textProperties.DataSource = ViewData["BANK_SELECT"];
            textProperties.TextFormatString = "{1}";
            textProperties.ValueField = "Code";
            textProperties.Columns.Add("Code", Humica.EF.Models.SY.SYSettings.getLabel("Code"));
            textProperties.Columns.Add("Description", Humica.EF.Models.SY.SYSettings.getLabel("Description"), 200);
            textProperties.ValueType = typeof(string);
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Account No");
            column.Width = 130;
            column.PropertiesEdit.ClientInstanceName = "txtBankAccount";
            column.FieldName = "AccountNo";
            var textProperties = column.PropertiesEdit as TextBoxProperties;
            textProperties.ValidationSettings.Display = Display.None;
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Account Name");
            column.Width = 130;
            column.PropertiesEdit.ClientInstanceName = "txtAccountName";
            column.FieldName = "AccountName";
            var textProperties = column.PropertiesEdit as TextBoxProperties;
            textProperties.ValidationSettings.Display = Display.None;
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "Salary";
            column.Width = 120;
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Salary");
            column.ColumnType = MVCxGridViewColumnType.SpinEdit;
            var spinEditProperties = column.PropertiesEdit as SpinEditProperties;
            spinEditProperties.DisplayFormatString = "N2";
            spinEditProperties.Style.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Right;
        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("IsTax");
            column.FieldName = "IsTax";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;

        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("IsNSSF");
            column.FieldName = "IsNSSF";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;

        });
        settings.Columns.Add(column =>
        {
            column.Caption = Humica.EF.Models.SY.SYSettings.getLabel("Association");
            column.FieldName = "Association";
            column.ColumnType = MVCxGridViewColumnType.CheckBox;

        });
        settings.Settings.VerticalScrollBarMode = ScrollBarMode.Hidden;
        settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
        settings.Settings.ShowHeaderFilterButton = true;

        settings.SettingsPager.PageSize = 15;
        settings.SettingsPager.EnableAdaptivity = true;
        settings.SettingsPager.PageSizeItemSettings.Visible = true;

        settings.SettingsExport.EnableClientSideExportAPI = true;
        settings.SettingsExport.ExportSelectedRowsOnly = true;
        settings.SettingsBehavior.AllowFocusedRow = true;
        settings.CellEditorInitialize = (s, e) =>
        {
            ASPxEdit editor = (ASPxEdit)e.Editor;
            editor.ValidationSettings.Display = Display.Dynamic;

            if (e.Column.FieldName == "LineItem")
            {
                editor.ReadOnly = true;
                editor.Value = -1;
            }
        };
    });

    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}

@grid.Bind(Model).GetHtml()

